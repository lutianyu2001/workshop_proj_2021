# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Football Data Integrated System Documentation'
copyright = 'UIC Group 16'
author = 'Lu Tianyu (1930026092)'

# The full version, including alpha/beta/rc tags
# generally, the version code can be write as: 0.0.1, 0.1.0-alpha, 1.2.0-rc, etc.
release = '2021-06-02'


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    'sphinx.ext.todo',
    'sphinx.ext.autosectionlabel',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'zh_CN'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# -- Options for LaTeX output -------------------------------------------------

latex_engine = 'xelatex'
latex_elements = {
    'papersize': 'a4paper',
    'pointsize': '11pt',
    'preamble': r'''

\usepackage{xeCJK}

\usepackage{fontspec}
\usepackage{amssymb}

\usepackage{unicode-math}

\setmathfont[
    Path = C:/Windows/Fonts/ ,
    BoldFont = XITSMath-Bold.otf ,
    ItalicFont = XITS-Italic.otf ,
    BoldItalicFont = XITS-BoldItalic.otf
    ]{XITSMath-Regular.otf}
% XITS Math font is included in Tex Live, but we can use it by .otf either

\setmainfont[
    Path = C:/Windows/Fonts/ ,
    BoldFont = Crimson-Bold.ttf ,
    ItalicFont = NimbusRomNo9L-RegIta.otf ,
    BoldItalicFont = NimbusRomNo9L-MedIta.otf
    ]{Crimson-Roman.ttf}
% Crimson's Italic font is too thin, thus we use NimbusRomanNo9L's Italic font to replace it

\setsansfont[
    Path = C:/Windows/Fonts/ ,
    BoldFont = sarasa-gothic-sc-bold.ttf ,
    ItalicFont = sarasa-gothic-sc-italic.ttf ,
    BoldItalicFont = sarasa-gothic-sc-bolditalic.ttf
    ]{sarasa-gothic-sc-regular.ttf}

\setmonofont[
    Path = C:/Windows/Fonts/ ,
    BoldFont = sarasa-mono-sc-bold.ttf ,
    ItalicFont = sarasa-mono-sc-italic.ttf ,
    BoldItalicFont = sarasa-mono-sc-bolditalic.ttf
    ]{sarasa-mono-sc-regular.ttf}

\setCJKmainfont[Path=C:/Windows/Fonts/]{FZShuSong-Z01_GBK.ttf}
\setCJKsansfont[Path=C:/Windows/Fonts/]{FZHei-B01_GBK.TTF}
\setCJKmonofont[Path=C:/Windows/Fonts/]{FZFangSong-Z02_GBK.ttf}

\xeCJKsetup{CJKmath=true}

\XeTeXlinebreaklocale "zh"
\XeTeXlinebreakskip = 0pt plus 1pt
\parindent 2em
\definecolor{VerbatimColor}{rgb}{0.95,0.95,0.95}
\setcounter{tocdepth}{3}

%\renewcommand\familydefault{\ttdefault}
%\renewcommand\CJKfamilydefault{\CJKrmdefault}
% Do not use these two command in "latex_elements" !

% Modified page header and page footer settings for package "fancyhdr"
% Override the settings in "sphinx.sty"
\makeatletter
% Redefine the 'normal' header/footer style when using "fancyhdr" package:
\@ifpackageloaded{fancyhdr}{%
  \ltx@ifundefined{c@chapter}
  {% no \chapter, "howto" (non-Japanese) docclass
   \fancypagestyle{plain}{
    \fancyhf{}
    \fancyfoot[C]{{\py@HeaderFamily\thepage}}
    \renewcommand{\headrulewidth}{0pt}
    \renewcommand{\footrulewidth}{0pt}
   }
   % Same as 'plain', this way we can use it in template
   % FIXME: shouldn't this have a running header with Name and Release like 'manual'?
   \fancypagestyle{normal}{
    \fancyhf{}
    \fancyfoot[C]{{\py@HeaderFamily\thepage}}
    \renewcommand{\headrulewidth}{0pt}
    \renewcommand{\footrulewidth}{0pt}
   }
  }%
  {% classes with \chapter command
   \fancypagestyle{normal}{
    \fancyhf{}
    \fancyfoot[RO]{{\py@HeaderFamily\thepage}}
    \fancyfoot[LO]{{\py@HeaderFamily\nouppercase{\rightmark}}}
    \fancyhead[RO]{{\py@HeaderFamily \@title}}
    \if@twoside
     \fancyfoot[LE]{{\py@HeaderFamily\thepage}}
     \fancyfoot[RE]{{\py@HeaderFamily\nouppercase{\leftmark}}}
     \fancyhead[LE]{{\py@HeaderFamily \@title}}
    \fi
    \renewcommand{\headrulewidth}{0.4pt}
    \renewcommand{\footrulewidth}{0.4pt}
    % define chaptermark with \@chappos when \@chappos is available for Japanese
    \ltx@ifundefined{@chappos}{}
      {\def\chaptermark##1{\markboth{\@chapapp\space\thechapter\space\@chappos\space ##1}{}}}
    }
  % Update the plain style so we get the page number & footer line,
  % but not a chapter or section title.  This is to keep the first
  % page of a chapter `clean.'
   \fancypagestyle{plain}{
    \fancyhf{}
    \fancyfoot[RO]{{\py@HeaderFamily\thepage}}
    \if@twoside\fancyfoot[LE]{{\py@HeaderFamily\thepage}}\fi
    \renewcommand{\headrulewidth}{0pt}
    \renewcommand{\footrulewidth}{0.4pt}
    }
   }
  }
\makeatother

'''
}

# Document Settings
latex_documents = [
    (master_doc, 'sphinx.tex', 'Football Data Integrated System',
     'UIC Group 16', 'manual', True),
]
